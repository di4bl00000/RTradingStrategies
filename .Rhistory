str(dd)
dd
dd<-read.table("cu0001.csv", header = T, sep = "\t",colClasses=c("Date","numeric","numeric","numeric","numeric","numeric","double"))
str(dd)
dd<-read.table("cu0001.csv", header = T, sep = "\t",colClasses=c("Date","numeric","numeric","numeric","numeric","numeric","numeric"))
dd<-read.table("cu0001.csv", header = T, sep = "\t",colClasses=c("Date","numeric","numeric","numeric","numeric","numeric","numeric"))
cu0001 <- dd
View(cu0001)
library("xts")
xts(cu0001)
as.xts(cu0001)
as.xts(cu0001, dateFormat="Date" )
as.xts(cu0001, dateFormat="Date")
class(cu0001)
matrix(cu0001)
as.matrix(cu0001)
as.xts(as.matrix(cu0001))
cu0001
cu0001[,-1]
as.xts(cu0001[,-1],order.by=cu0001[,1])
cu0001<-as.xts(cu0001[,-1],order.by=cu0001[,1])
fix(cu0001)
nrow(cu0001)
head(cu0001)
tail(cu0001)
cu0001<-cu0001[1:5]
head(cu0001)
tail(cu0001)
dd<-read.table("cu0001.csv", header = T, sep = "\t",colClasses=c("Date","numeric","numeric","numeric","numeric","numeric","numeric"))
cu0001 <- dd
cu0001<-as.xts(cu0001[,-1],order.by=cu0001[,1])
cu0001[,1:5]
cu0001<-cu0001[,1:5]
head(cu0001)
tail(cu0001)
save(cu0001, file="cu0001.rda")
source('~/workspace/RTradingStrategies/quantstrat-myrule.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
getSymbols("IF1011", src="MySQL")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
library("RMySQL")
library("DBI")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
m <- dbDriver("MySql")
m <- dbDriver("MySQL")
str(m)
print(m)
con<-dbConnect(m)
print(con)
con<-dbConnect(m,user="test")
con<-dbConnect(m,user="test",password="12345")
con<-dbConnect(m,user="test",password="123456")
con<-dbConnect(m,user="test",password="123456", dbname="historydata")
con<-dbConnect(m,user="test",password="123456", dbname="historydata",host="192.168.10.148")
con<-dbConnect(m,user="test",password="123456", dbname="historydata",host="192.168.10.149")
con<-dbConnect(m,user="test",password="123456", dbname="historydata",host="192.168.10.149")
con<-dbConnect(m,user="test",password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols.MySQL
MySQL()
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols.MySQL
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata")
getSymbols("IF1011", src="MySQL", user="test", password="123456", dbname="historydata", db.fields = c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
IF1011
fix(IF1011)
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
head(IF1203)
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", field.names=c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", field.names=c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("Open", "High", "Low", "Close", "Volume", "Adjusted"))
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("date", "open", "high", "low", "close", "volume", "adjusted"))
head(IF1203)
getSymbols("IF1203", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("date", "open", "high", "low", "close", "volume", "adjusted"), field.names=c("open", "high", "low", "close", "volume", "adjusted"))
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
head(IF1203)
ts<-IF1203
ts <- ts["T09:14/T15:15"]
ts <- to.minutes(ts, OHLC=F)
head(ts)
ts <- ts["T09:15/T15:15"]
head(ts)
ts<-IF1203
ts <- ts["T09:15/T15:15"]
head(ts)
ts[,2:5]
ts<-ts[,2:5]
ts <- to.minutes(ts, OHLC=F)
ts
symbols <- c("IF1011", "IF1012", paste("IF110", 1:9, sep=""), paste("IF120", 1:6, sep=""))
symbols
source('~/workspace/RTradingStrategies/saveData.R')
load("~/workspace/RTradingStrategies/IF1011.rda")
IF1011
head(IF1011)
source('~/workspace/RTradingStrategies/saveData.R')
load("~/workspace/RTradingStrategies/IF1011.rda")
source('~/workspace/RTradingStrategies/saveData.R')
load("~/workspace/RTradingStrategies/IF1104.rda")
load("~/workspace/RTradingStrategies/IF1104.rda")
save
source('~/workspace/RTradingStrategies/saveData.R')
load("~/workspace/RTradingStrategies/IF1104.rda")
load("~/workspace/RTradingStrategies/IF1104.rda")
ts
source('~/workspace/RTradingStrategies/saveData.R')
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
source('~/workspace/RTradingStrategies/saveData.R')
head(IF1104)
source('~/workspace/RTradingStrategies/saveData.R')
head(IF1104)
source('~/workspace/RTradingStrategies/saveData.R')
source('~/workspace/RTradingStrategies/saveData.R')
save("IF1104", file="IF1104.rda")
save("IF1105", file="IF1105.rda")
save("IF1106", file="IF1106.rda")
save("IF1107", file="IF1107.rda")
save("IF1108", file="IF1108.rda")
save("IF1109", file="IF1109.rda")
save("IF1110", file="IF1110.rda")
symbols <- c(paste("IF110", 4:9, sep=""), paste("IF111", 0:2, sep=""), paste("IF120", 1:6, sep=""))
symbols
source('~/.active-rstudio-document')
source('~/workspace/RTradingStrategies/saveData.R')
save("IF1110", file="IF1110.rda")
save("IF1111", file="IF1111.rda")
save("IF1112", file="IF1112.rda")
save("IF1201", file="IF1201.rda")
save("IF1202", file="IF1202.rda")
save("IF1203", file="IF1203.rda")
save("IF1204", file="IF1204.rda")
save("IF1205", file="IF1205.rda")
save("IF1206", file="IF1206.rda")
save("IF1207", file="IF1207.rda")
load("~/workspace/RTradingStrategies/IF1206.rda")
getSymbols("IF1204",src="RData")
library("quantstrat")
library("qmao")
getSymbols("IF1204",src="RData")
source('~/workspace/RTradingStrategies/dma_adx.R')
head(IF1204)
getSymbols("IF1208", src="RData", dir=current.dir,  col.names=c("High","Low","Close","Bid", "Ask", "Volume"))
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
showSymbols()
removeSymbols("IF1208")
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
warnings()
rbind(IF1201, IF1202)
rbind(IF1204, IF1205)
load("~/workspace/RTradingStrategies/IF1205.rda")
rbind(IF1204, IF1205)
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
install.packages("doMC")
library("doMC")
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
install.packages("doSMP")
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
showSymbols()
removeSymbols(IF1204)
removeSymbols("IF1204")
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
setParameterDistribution
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
ddddd<-list()
ddddd
ddddd$ddd<-123
ddddd
ddddd[1]
ddddd[2]
ddddd["ddd"]
ddddd["ddddd"]
ddddd[["ddddd"]]
ddddd[["ddd"]]
class(ddddd["ddd"])
class(ddddd[["ddd"]])
ddddd$ddd
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
require(utils)
expand.grid(height = seq(60, 80, 5), weight = seq(100, 300, 50),
sex = c("Male","Female"))
x <- seq(0,10, length.out=100)
y <- seq(-1,1, length.out=20)
d1 <- expand.grid(x=x, y=y)
lll<-list(height = seq(60, 80, 5), weight = seq(100, 300, 50),
sex = c("Male","Female"))
lll
expand.grid(lll)
fdfd<-expand.grid(lll)
class(fdfd)
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
times(3) %do% rnorm(1)
foreach(i=1:3) %do%
sqrt(i)
m <- matrix(rnorm(9), 3, 3)
foreach(i=1:ncol(m), .combine=c) %do%
mean(m[,i])
loadInstruments
stock("SPY", currency("USD"), 1)
tmpdir <- tempdir()
tmpdir
ls_Instruments()
ls_instruments
ls_instruments()
stock("SPY", currency("USD"), 1)
tmpdir <- tempdir()
saveInstruments("MyInstruments.RData", dir=tmpdir)
rm_instruments(keep.currencies=FALSE)
ls_instruments()
loadInstruments("MyInstruments.RData", dir=tmpdir)
ls_instruments()
saveInstruments("MyInstruments.R", dir=tmpdir)
rm_instruments(keep.currencies=FALSE)
loadInstruments("MyInstruments.R", dir=tmpdir)
ls_instruments()
tmpdir
unlink(tmpdir, recursive=TRUE)
detach("package:FinancialInstrument")
strat
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/myMA.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
gc()
gc() #- do it now
gcinfo(TRUE)
gc() #- do it now
gcinfo(TRUE) #-- in the future, show when R does it
x <- integer(100000); for(i in 1:18) x <- c(x,i)
gcinfo(verbose = FALSE)#-- don't show it anymore
gc(TRUE)
gc(reset=TRUE)
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
traceback()
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quantstrat-parameters.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
tradeStats(portfolio.name)
tradeStats
edit(tradeStats)
tradeStats(portfolio.name)install.packages("blotter", repos= c("http://R-Forge.R-project.org", getOption("repos")))
install.packages("blotter", repos= c("http://R-Forge.R-project.org", getOption("repos")))
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quant-debug.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/quant-debug.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
posPL$Net.Trading.PL
source('/Volumes/data/RProjects/RTradingStrategies/quant-debug.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
qqqq
cumsum(qqqq)
head(qqqq)
source('/Volumes/data/RProjects/RTradingStrategies/quant-debug.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
head(IF1208)
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('/Volumes/data/RProjects/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
testPackList
str(testPackList)
names(testPackList)
testPackList$eachRun
names(testPackList$eachRun)
testPackList$eachRun[[1]]
names(testPackList$eachRun[[1]])
testPackList$eachRun[[1]]$out
source('~/workspace/RTradingStrategies/dma_adx.R')
updatePortf
blotter::.getBySymbol
blotter:::.getBySymbol
timeBased(Sys.time())
is.timeBased(Sys.Date())
is/timeBased(Sys.time())
is.timeBased(Sys.time())
timeBased(200701)
is.timeBased
xts:::.parseISO8601
data(sample_matrix)
sample.xts <- as.xts(sample_matrix, descr='my new xts object')
class(sample.xts)
str(sample.xts)
head(sample.xts)
times(sample.xts)
time(sample.xts)
.parseISO8601(time(sample.xts))
.parseISO8601
.parseISO8601('2000')
.parseISO8601('2000/2001')
.parseISO8601('2000-05/2001')
.parseISO8601('2000-05/2001-02')
.parseISO8601('2000-01/02')
.parseISO8601('T08:30/T15:00')
.parseISO8601
getInstrument
.parseISO8601(time(sample.xts))
sample.xts["/NA"]
.parseISO8601
sample.xts
sample.xts["2007"]
sample.xts["2008"]
nrow(sample.xts["2008"])
sample.xts["2007-06"]
sample.xts["2007-06-30"]
sample.xts["2007-06-30T12:00:00"]
x.date <- as.Date(paste(2003, 2, c(1, 3, 7, 9, 14), sep = "-"))
x <- zoo(rnorm(5), x.date)
x
index(x)
.parseISO8601(index(x))
x["/"]
x[""]
x["/2001"]
x["/2006"]
x
sample.xts["/"]
sample.xts["/NA"]
sample.xts["NA/"]
sample.xts["/"]
paste('/',NA,sep='')
source('~/workspace/RTradingStrategies/dma_adx.R')
getEndEq
initAccout
initAccou
initAcct
.initSummary
blotter::: .initSummary
dailyTxnPL
apply.daily
apply.weekly
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/dma_adx.R')
tradeStats
source('~/workspace/RTradingStrategies/dma_adx.R')
testPackList
str(testPackList)
testPackList$eachRun
str(testPackList$eachRun)
names(testPackList)
names(testPackList$statsTable)
testPackList$statsTable
-45968.48+30897.67
applyStrategy
updatePortf
.updatePosPL
IF1208
IF1204
IF1204["/"]
source('~/workspace/RTradingStrategies/dma_adx.R')
testPackList$statsTable
.updatePosPL
paste('/', NULL, sep='')
source('~/workspace/RTradingStrategies/dma_adx.R')
source('~/workspace/RTradingStrategies/myMA.R')
source('~/workspace/RTradingStrategies/quantstrat-addon.R')
source('~/workspace/RTradingStrategies/myMA.R')
getPrice
has.Price
(x <- xts(4:10, Sys.Date()+4:10))
(y <- xts(1:6, Sys.Date()+1:6))
merge(x,y)
az <- zoo(1:6)
az
bz <- zoo(c(2,NA,1,4,5,2))
bz
na.locf(bz)
na.locf(bz, fromLast = TRUE)
cz <- zoo(c(NA,9,3,2,3,2))
cz
na.locf(cz)
z <- zoo(c(0.007306621, 0.007659046, 0.007681013,
0.007817548, 0.007847579, 0.007867313),
as.Date(c("1993-01-01", "1993-01-09", "1993-01-16",
"1993-01-23", "1993-01-30", "1993-02-06")))
z
start(z)
end(z)
g <- seq(start(z), end(z), "day")
g
na.locf(z, xout = g)
z <- zoo(1:9, as.POSIXct(c("2010-01-04 09:30:02", "2010-01-04 09:30:06",
"2010-01-04 09:30:07", "2010-01-04 09:30:08", "2010-01-04 09:30:09",
"2010-01-04 09:30:10", "2010-01-04 09:30:11", "2010-01-04 09:30:13",
"2010-01-04 09:30:14")))
z
g <- seq(start(z), end(z), by = "2 sec")
g
na.locf(z, xout = g)
z <- zoo(c(1311.56, 1309.04, 1295.5, 1296.6, 1286.57, 1288.12,
1289.12, 1289.12, 1285.33, 1307.65, 1309.93, 1311.46, 1311.28,
1308.11, 1301.74, 1305.41, 1309.72, 1310.61, 1305.19, 1313.21,
1307.85, 1312.25, 1325.76), as.Date(c(13242, 13244,
13245, 13248, 13249, 13250, 13251, 13252, 13255, 13256, 13257,
13258, 13259, 13262, 13263, 13264, 13265, 13266, 13269, 13270,
13271, 13272, 13274)))
z
time(z)
rng <- range(time(z))
rng
zoo(, seq(rng[1], rng[2], by = "day"))
z
z.na <- merge(z, zoo(, seq(rng[1], rng[2], by = "day")))
z.na
na.locf(z.na)
as.POSIXlt(time(z.na))$mday == 5
time(z.na)
as.POSIXlt(time(z.na))
as.POSIXlt(time(z.na))$mday
na.locf(z.na)[as.POSIXlt(time(z.na))$mday == 5]
idx <- coredata(na.locf(seq_along(z.na) + (0 * z.na)))
idx
z.na[idx[as.POSIXlt(time(z.na))$mday == 5]]
merge(z.na, filled1 = na.locf(z.na, maxgap = 1))
filled1 = na.locf(z.na, maxgap = 1)
filled1
merge(z.na, filled1 = na.locf(z.na, maxgap = 1))
m <- zoo(cbind(c(1, 2, NA, NA, 5, NA, NA), seq(7)^2), as.Date(1:7))
m
r <- na.locf(m[,1]) * m[,2] / na.locf(m[,2] + (m[,1]-m[,1]))
r
cbind(V1 = r, V2 = m[,2])
zq <- zoo(c(1, NA, 3, 4), as.yearqtr(2000) + 0:3/4)
zq
tt <- as.yearmon(start(zq)) + seq(0, len = 3 * length(zq))/12
tt
na.locf(zq, xout = tt, maxgap = 0)
source('~/workspace/RTradingStrategies/dma_adx.R')
tradeStats
install.packages("FinancialInstrument", repos="http://R-Forge.R-project.org")
install.packages(c("RcppExamples", "timeSeries"))
getSymbols("IF1101", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("date", "open", "high", "low", "close", "bid", "ask", "volume", "adjusted"), field.names=c("open", "high", "low", "close", "bid", "ask", "volume", "adjusted"))
head(IF1101)
source('~/workspace/RTradingStrategies/saveData.R')
head(IF1101)
getSymbols("IF1101", src="MySQL", user="test", password="123456", dbname="historydata", db.fields=c("date", "open", "high", "low", "close", "bid", "ask", "volume", "adjusted"), field.names=c("open", "high", "low", "close", "bid", "ask", "volume", "adjusted"))
head(IF1101)
head(IF1101,n=120)
source('~/workspace/RTradingStrategies/saveData.R')
save(IF1101, file="IF1101.rda"))
save(IF1101, file="IF1101.rda")
save(IF1102, file="IF1102.rda")
save(IF1103, file="IF1103.rda")
save(IF1011, file="IF1011.rda")
save(IF1012, file="IF1012.rda")
ndays(IF1012)
ndays(IF1011)
ndays(IF1101)
ndays(IF1102)
ndays(IF1103)
days
